Instalación dlib (http://www.pyimagesearch.com/2017/03/27/how-to-install-dlib/):
-----------------

Step #1: Install dlib prerequisites
The dlib library only has four primary prerequisites:

+Boost: Boost is a collection of peer-reviewed (i.e., very high quality) C++ libraries that help programmers not get caught up in reinventing the wheel. Boost provides implementations for linear algebra, multithreading, basic image processing, and unit testing, just to name a few.

+Boost.Python: As the name of this library suggests, Boost.Python provides interoperability between the C++ and Python programming language.

+CMake: CMake is an open-source, cross-platform set of tools used to build, test, and package software. You might already be familiar with CMake if you have used it to compile OpenCV on your system.

+X11/XQuartx: Short for “X Window System”, X11 provides a basic framework for GUI development, common on Unix-like operating systems. The macOS/OSX version of X11 is called XQuartz.

Instalamos mediante:
    sudo apt-get install build-essential cmake
    sudo apt-get install libgtk-3-dev
    sudo apt-get install libboost-all-dev


Checkear que pip esté instalado, sino:
wget https://bootstrap.pypa.io/get-pip.py
sudo python get-pip.py

Step #2: Install dlib with Python bindings
Instalar:
    -NumPy
    -SciPy
    -scikit-image
con:
    pip install --user numpy
    pip install --user scipy
    pip install --user scikit-image
Instalamos dlib:
    pip install --user dlib

========================================================================
Instalación openCV con apt:
    sudo apt install python-opencv

EN CASO DE NO FUNCIONAR LO ANTERIOR, hay que hacer la compilacion e instalar:
(http://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html) :
-------------------
Required Packages:
[compiler] sudo apt-get install build-essential
[required] sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
[optional] sudo apt-get install libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

Getting OpenCV Source Code:
You can use the latest stable OpenCV version available in sourceforge or you can grab the latest snapshot from our Git repository (https://github.com/opencv/opencv).

Building OpenCV from Source Using CMake, Using the Command Line:
1. Create a temporary directory, which we denote as <cmake_binary_dir>, where you want to put the generated Makefiles, project files as well the object files and output binaries.

2. Enter the <cmake_binary_dir> and type:
    cmake [<some optional parameters>] <path to the OpenCV source directory>
For example:
    cd ~/opencv
    mkdir release
    cd release
    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..

3. Enter the created temporary directory (<cmake_binary_dir>) and proceed with:
    make
    sudo make install

========================================================================
